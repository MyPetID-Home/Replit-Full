let isLoggedIn = false;
let userData = null;
let dogData = null;
let locationsData = [];

async function fetchData() {
    const urlParams = new URLSearchParams(window.location.search);
    const tagId = urlParams.get('tag') || '04:6C:E3:0F:BE:2A:81';

    if (!tagId) {
        const content = document.getElementById('content');
        if (content) content.innerHTML = '<p>No dog tag ID provided. Please scan a valid QR code or NFC tag.</p>';
        return;
    }

    try {
        const cacheBust = new Date().getTime();
        const dogsResponse = await fetch(`/data/dogs.json?t=${cacheBust}`);
        const dogs = dogsResponse.ok ? await dogsResponse.json() : [];
        dogData = dogs.find(dog => dog.nfcTagId === tagId) || {
            _id: 'defaultDogId',
            nfcTagId: tagId,
            name: 'Unknown Dog',
            description: 'No description available',
            age: 'Unknown',
            weight: 'Unknown',
            coat: 'Unknown',
            sex: 'Unknown',
            eyeColor: 'Unknown',
            neutered: 'Unknown',
            breed: 'Unknown',
            personality: 'Unknown',
            loves: 'Unknown',
            routine: 'Unknown',
            training: 'Unknown',
            quirks: 'Unknown',
            medicalInfo: { shots: '', medications: '', vaccinations: '', checkups: '', allergies: '' },
            socials: { youtube: '', facebook: '', instagram: '', donationLink: '' },
            testimonials: [],
            gallery: [],
            photoUrl: '',
            ownerId: ''
        };
        console.log('Dog Data:', dogData);

        const usersResponse = await fetch(`/data/users.json?t=${cacheBust}`);
        const users = usersResponse.ok ? await usersResponse.json() : [];
        userData = users.find(user => user._id === dogData.ownerId) || null;
        console.log('User Data:', userData);

        const locationsResponse = await fetch(`/data/locations.json?t=${cacheBust}`);
        locationsData = locationsResponse.ok ? await locationsResponse.json() : [];
        console.log('Locations Data:', locationsData);
    } catch (error) {
        console.error('Error fetching static data:', error);
        const content = document.getElementById('content');
        if (content) content.innerHTML = '<p>Failed to load data. Please check back later.</p>';
        return;
    }

    if (userData) {
        isLoggedIn = true;
        showLoggedInState();
    } else {
        isLoggedIn = false;
        showLoggedOutState();
    }

    navigate(window.location.hash.replace('#', '') || 'account');
}

setInterval(fetchData, 30000);

function showLoggedInState() {
    const loginBtn = document.getElementById('loginBtn');
    const logoutBtn = document.getElementById('logoutBtn');
    const registerBtn = document.getElementById('registerBtn');
    const accountBtn = document.getElementById('accountBtn');
    if (loginBtn) loginBtn.style.display = 'none';
    if (logoutBtn) logoutBtn.style.display = 'block';
    if (registerBtn) registerBtn.style.display = 'none';
    if (accountBtn) accountBtn.style.display = 'block';
}

function showLoggedOutState() {
    const loginBtn = document.getElementById('loginBtn');
    const logoutBtn = document.getElementById('logoutBtn');
    const registerBtn = document.getElementById('registerBtn');
    const accountBtn = document.getElementById('accountBtn');
    if (loginBtn) loginBtn.style.display = 'none'; // Hidden; use account page for login
    if (logoutBtn) logoutBtn.style.display = 'none';
    if (registerBtn) registerBtn.style.display = 'none'; // Hidden; use account page for register
    if (accountBtn) accountBtn.style.display = 'block';
}

function toggleDrawer() {
    const drawer = document.getElementById('drawer');
    if (drawer) drawer.style.display = drawer.style.display === 'flex' ? 'none' : 'flex';
}

async function navigate(page) {
    const content = document.getElementById('content');
    const pageTitle = document.getElementById('page-title');
    const profilePic = document.getElementById('profile-pic');
    const locationMap = document.getElementById('location-map');
    if (!content || !pageTitle || !profilePic || !locationMap) {
        console.error('Required DOM elements not found');
        return;
    }
    toggleDrawer();

    window.location.hash = page;
    pageTitle.textContent = page.charAt(0).toUpperCase() + page.split('-').join(' ').slice(1);

    if (page === 'account' || page === 'login' || page === 'register' || page === 'reset-password' || page === 'logout') {
        profilePic.style.backgroundColor = 'gray';
        profilePic.style.backgroundImage = 'none';
        locationMap.style.display = 'none';
    } else {
        profilePic.style.backgroundImage = `url("${dogData.photoUrl || ''}")`;
        profilePic.style.backgroundSize = 'cover';
    }

    switch (page) {
        case 'home':
            content.innerHTML = `
                <h2>${dogData.name}</h2>
                <p>${dogData.description}</p>
                <p>Age: ${dogData.age}</p>
                <p>Weight: ${dogData.weight}</p>
                <p>Coat: ${dogData.coat}</p>
                <p>Sex: ${dogData.sex}</p>
                <p>Eye Color: ${dogData.eyeColor}</p>
                <p>Neutered: ${dogData.neutered}</p>
                <button onclick="navigate('report-lost')">Report Lost</button>
                <button onclick="navigate('medical')">Medical Info</button>
                <button onclick="navigate('about')">About Me</button>
                <button onclick="navigate('socials')">Socials</button>
                <button class="text-button" onclick="navigate('contact')">Contact Information</button>
                <button onclick="navigate('location')">View Location</button>
            `;
            locationMap.style.display = 'none';
            break;
        case 'contact':
            content.innerHTML = `
                <h2>Contact Information</h2>
                <h2>Dad</h2>
                <p>Email: ${userData ? userData.email : 'real_CAK3D@yahoo.com'}</p>
                <p>Phone: ${userData ? userData.phone : '(518) 610-3096'}</p>
                <p>Address: ${userData ? userData.address : '37 Fisher Ave, Lewiston, Maine, 04240'}</p>
                <h2>Boy</h2>
                <p>Email: ${userData ? userData.email : 'therealzayne@yahoo.com'}</p>
                <p>Phone: ${userData ? userData.phone : '(207) 440-7812'}</p>
                <p>Address: ${userData ? userData.address : '3 Downey Ln, Poland, Maine, 04210'}</p>
                <button onclick="navigate('report-lost')">Report Lost</button>
                <button onclick="navigate('medical')">Medical Info</button>
            `;
            locationMap.style.display = 'none';
            break;
        case 'medical':
            content.innerHTML = `
                <h2>Medical Information</h2>
                <p>Note: Please cover any personal information before uploading any documents</p>
                <p>Recent Shots: ${dogData.medicalInfo.shots}</p>
                <p>Medications: ${dogData.medicalInfo.medications}</p>
                <p>Vaccinations: ${dogData.medicalInfo.vaccinations}</p>
                <p>Checkups: ${dogData.medicalInfo.checkups}</p>
                <p>Allergies: ${dogData.medicalInfo.allergies}</p>
                <button class="text-button" onclick="navigate('about')">View About Me</button>
            `;
            locationMap.style.display = 'none';
            break;
        case 'about':
            content.innerHTML = `
                <h2>About Me</h2>
                <p>Breed: ${dogData.breed}</p>
                <p>Personality: ${dogData.personality}</p>
                <p>Loves: ${dogData.loves}</p>
                <p>Routine: ${dogData.routine}</p>
                <p>Training: ${dogData.training}</p>
                <p>Quirks: ${dogData.quirks}</p>
                <div style="display: flex; align-items: center; justify-content: center;">
                    <strong>My Socials</strong>
                    <span style="margin-left: 8px;">â˜°</span>
                </div>
                <p style="text-align: center;">Take a look at my Socials to see all my crazy journeys my owners have posted!</p>
                <button class="text-button" onclick="navigate('socials')">View Socials</button>
            `;
            locationMap.style.display = 'none';
            break;
        case 'socials':
            content.innerHTML = `
                <h2>Socials</h2>
                <p>YouTube: ${dogData.socials.youtube}</p>
                [![My Skills](https://skillicons.dev/icons?i=instagram)](https://skillicons.dev)<p>Instagram: ${dogData.socials.instagram}</p>
                <p>Facebook: ${dogData.socials.facebook}</p>
                <button class="text-button" onclick="navigate('donation')">Donation: ${dogData.socials.donationLink}</button>
                <p>Testimonials: See what others have to say about me!</p>
                ${dogData.testimonials.map(t => `<p>${t.text} - ${t.author}</p>`).join('')}
                <button class="text-button" onclick="navigate('gallery')">View Gallery: Check out my photos and videos!</button>
            `;